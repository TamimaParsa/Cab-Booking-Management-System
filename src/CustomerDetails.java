
import dao.ConnectionProvider;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import java.util.Date;
import java.text.ParseException;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author P A R S A
 */

public class CustomerDetails extends javax.swing.JFrame {

    /**
     * Creates new form CustomerDetails
     */
private int CustomerPk = 0;
    public CustomerDetails() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private boolean validateFields(String formType) {
        if (formType.equals("new") && !txtUsername.getText().equals("") && !txtName.getText().equals("") && !txtdoBirth.getDate().equals("") && !txtEmail.getText().equals("") && !txtAddress.getText().equals("") && !txtPhone.getText().equals("")&& !txtPassword.getText().equals("")) {
            return false;
        } 
        else if (formType.equals("edit") && !txtUsername.getText().equals("") && !txtName.getText().equals("") && !txtdoBirth.getDate().equals("") && !txtEmail.getText().equals("") && !txtAddress.getText().equals("") && !txtPhone.getText().equals("")) {
            return false;
        } else {
            return true;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCustomer = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtdoBirth = new com.toedter.calendar.JDateChooser();
        txtPassword = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Username", "Name", "Date of Birth", "Email", "Address", "Phone Number"
            }
        ));
        tableCustomer.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tableCustomerMouseMoved(evt);
            }
        });
        tableCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCustomer);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 124, 508, 353));

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CUSTOMER DETAILS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Username");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 121, -1, -1));

        jLabel3.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 161, -1, -1));

        jLabel4.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Date of Birth");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 201, -1, -1));

        jLabel5.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Email");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 248, -1, -1));

        jLabel6.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Address");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 294, -1, -1));

        jLabel7.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Phone Number");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 343, -1, -1));

        jLabel8.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Password");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 394, -1, -1));
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 115, 238, -1));
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 155, 238, -1));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 242, 238, -1));
        getContentPane().add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 288, 238, -1));
        getContentPane().add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 337, 238, -1));

        btnAdd.setBackground(new java.awt.Color(204, 204, 255));
        btnAdd.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, 80, 32));

        btnUpdate.setBackground(new java.awt.Color(204, 204, 255));
        btnUpdate.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 440, 84, 32));

        btnReset.setBackground(new java.awt.Color(204, 204, 255));
        btnReset.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 440, -1, 32));

        btnCancel.setBackground(new java.awt.Color(204, 204, 255));
        btnCancel.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(853, 490, 80, 30));
        getContentPane().add(txtdoBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 195, 238, -1));
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 388, 238, -1));

        btnDelete.setBackground(new java.awt.Color(204, 204, 255));
        btnDelete.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 440, 80, 33));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/royalB.jpg"))); // NOI18N
        jLabel9.setText("jLabel9");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        String name = txtName.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(txtdoBirth.getDate());
        String email = txtEmail.getText();
        String address = txtAddress.getText();
        String phone = txtPhone.getText();
        String password = txtPassword.getText();

        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
        } else {
            try {
                Connection con = ConnectionProvider.getCon();

                // Check if username already exists
                PreparedStatement checkStmt = con.prepareStatement("SELECT * FROM customer WHERE username = ?");
                checkStmt.setString(1, username);
                ResultSet rs = checkStmt.executeQuery();

                if (rs.next()) {
                    // Username already exists
                    JOptionPane.showMessageDialog(null, "Can't use that username, username already exists!");
                } else {
                    // Username is unique, proceed with insert
                    PreparedStatement ps = con.prepareStatement("INSERT INTO customer (username, name, date, email, address, phoneNumber, password) VALUES (?, ?, ?, ?, ?, ?, ?)");
                    ps.setString(1, username);
                    ps.setString(2, name);
                    ps.setString(3, date);
                    ps.setString(4, email);
                    ps.setString(5, address);
                    ps.setString(6, phone);
                    ps.setString(7, password);
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Customer account created successfully");
                    setVisible(true);
                    new CustomerDetails().setVisible(true);
                }

                DefaultTableModel model = (DefaultTableModel) tableCustomer.getModel();
            model.setRowCount(0);
                 Statement st = con.createStatement();
            ResultSet rs2 = st.executeQuery("SELECT * FROM customer");
            while (rs2.next()) {
                model.addRow(new Object[]{
                    rs2.getString("customer_pk"),
                    rs2.getString("username"),
                    rs2.getString("name"),
                    rs2.getString("date"),
                    rs2.getString("email"),
                    rs2.getString("address"),
                    rs2.getString("phoneNumber")
                });
            }

            // Optional: Reset fields after adding
            txtUsername.setText("");
            txtName.setText("");
            txtdoBirth.setDate(null);
            txtEmail.setText("");
            txtAddress.setText("");
            txtPhone.setText("");
            txtPassword.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new CustomerDetails().setVisible(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        String name = txtName.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(txtdoBirth.getDate());
        String email = txtEmail.getText();
        String address = txtAddress.getText();
        String phone = txtPhone.getText();

        if (validateFields("edit")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
        }

        try {
            Connection con = ConnectionProvider.getCon();

            // Check if username already exists
            PreparedStatement checkStmt = con.prepareStatement("SELECT * FROM customer WHERE username = ?");
            checkStmt.setString(1, username);
            ResultSet rs = checkStmt.executeQuery();

            if (rs.next()) {
                // Username already exists
                JOptionPane.showMessageDialog(null, "Can't use that username, username already exists!");
            } else {
                // Username is unique, proceed with insert
                PreparedStatement ps = con.prepareStatement("update customer set username=?, name=?, date=?, email=?, address=?, phoneNumber=? where customer_pk=?");
                ps.setString(1, username);
                ps.setString(2, name);
                ps.setString(3, date);
                ps.setString(4, email);
                ps.setString(5, address);
                ps.setString(6, phone);
                ps.setInt(7, CustomerPk);
                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Customer account updated successfully");
                setVisible(false);
                new NewCustomer().setVisible(true);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tableCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomerMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tableCustomerMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableCustomer.getModel();
        try{
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from customer");
            while(rs.next()){
                model.addRow(new Object[]{rs.getString("customer_pk"),rs.getString("username"),rs.getString("name"),rs.getString("date"),rs.getString("email"),rs.getString("address"),rs.getString("phoneNumber")});
            }
        }
        catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
                } 
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    private void tableCustomerMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomerMouseMoved
        // TODO add your handling code here:
        int index = tableCustomer.getSelectedRow();
        TableModel model = tableCustomer.getModel();
        String id = model.getValueAt(index, 0).toString();
        CustomerPk = Integer.parseInt(id);
        
        String username = model.getValueAt(index, 1).toString();
        txtUsername.setText(username);
        
        String name = model.getValueAt(index, 2).toString();
        txtName.setText(name);
        
        String dateString = model.getValueAt(index, 3).toString();
        try {
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd"); // Use your actual date format
    Date date = sdf.parse(dateString);
    txtdoBirth.setDate(date);
} catch (ParseException e) {
    e.printStackTrace(); // Handle the error (e.g., show an error message or log it)
}
        //txtdoBirth.setDate(date);
        
        String email = model.getValueAt(index, 4).toString();
        txtEmail.setText(email);
        
        String address = model.getValueAt(index, 5).toString();
        txtAddress.setText(address);
        
        String phone = model.getValueAt(index, 6).toString();
        txtPhone.setText(phone);
        
        txtPassword.setEditable(false);
        txtPassword.setBackground(Color.DARK_GRAY);
        
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_tableCustomerMouseMoved

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
       if (CustomerPk == 0) {
        JOptionPane.showMessageDialog(this, "Please select a customer to delete.");
        return;
    }

    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this customer?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("DELETE FROM customer WHERE customer_pk = ?");
            ps.setInt(1, CustomerPk);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Customer deleted successfully.");

            // Reset fields
            txtUsername.setText("");
            txtName.setText("");
            txtdoBirth.setDate(null);
            txtEmail.setText("");
            txtAddress.setText("");
            txtPhone.setText("");
            txtPassword.setText("");

            // Refresh table
            DefaultTableModel model = (DefaultTableModel) tableCustomer.getModel();
            model.setRowCount(0); // clear existing rows
            formComponentShown(null); // reload data

            btnAdd.setEnabled(true);
            btnUpdate.setEnabled(false);
            CustomerPk = 0;

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(CustomerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(CustomerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(CustomerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(CustomerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new CustomerDetails().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCustomer;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtUsername;
    private com.toedter.calendar.JDateChooser txtdoBirth;
    // End of variables declaration//GEN-END:variables
}
